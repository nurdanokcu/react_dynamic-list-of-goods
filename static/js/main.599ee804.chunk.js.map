{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","id","color","name","style","getAll","fetch","then","response","ok","Error","status","toString","json","App","useState","setGoods","handleAllClick","a","allGoods","handle5FirstClick","sort","b","localeCompare","slice","firstFive","handleGetRed","filter","redGoods","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"qPAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GACT,IAAQC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAEnB,OACE,oBAEEC,MAAO,CAAEF,SACT,UAAQ,OAHV,SAKGC,GAJIF,SCTR,SAASI,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,OAAOC,YAGlC,OAAOJ,EAASK,UAIf,ICTMC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOjB,EAAP,KAAckB,EAAd,KAEMC,EAAc,uCAAG,4BAAAC,EAAA,sEACEb,IADF,OACfc,EADe,OAGrBH,EAASG,GAHY,2CAAH,qDAMdC,EAAiB,uCAAG,4BAAAF,EAAA,sEDCnBb,IACJE,MAAK,SAAAT,GAAK,OAAIA,EACZuB,MAAK,SAACH,EAAGI,GAAJ,OAAUJ,EAAEf,KAAKoB,cAAcD,EAAEnB,SACtCqB,MAAM,EAAG,MCJY,OAClBC,EADkB,OAGxBT,EAASS,GAHe,2CAAH,qDAMjBC,EAAY,uCAAG,4BAAAR,EAAA,sEDEdb,IACJE,MAAK,SAAAT,GACJ,OAAOA,EAAM6B,QAAO,SAAA3B,GAAI,MAAmB,QAAfA,EAAKE,YCJhB,OACb0B,EADa,OAGnBZ,EAASY,GAHU,2CAAH,qDAMlB,OACE,sBAAKC,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAASd,EAHX,4BAQA,wBACEa,KAAK,SACL,UAAQ,oBACRC,QAASX,EAHX,gCAQA,wBACEU,KAAK,SACL,UAAQ,aACRC,QAASL,EAHX,4BAQA,cAAC,EAAD,CAAW5B,MAAOA,QCrDxBkC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.599ee804.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => {\n      const { id, color, name } = good;\n\n      return (\n        <li\n          key={id}\n          style={{ color }}\n          data-cy=\"good\"\n        >\n          {name}\n        </li>\n      );\n    })}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status.toString());\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => {\n      return goods.filter(good => good.color === 'red');\n    });\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const handleAllClick = async () => {\n    const allGoods = await getAll();\n\n    setGoods(allGoods);\n  };\n\n  const handle5FirstClick = async () => {\n    const firstFive = await get5First();\n\n    setGoods(firstFive);\n  };\n\n  const handleGetRed = async () => {\n    const redGoods = await getRedGoods();\n\n    setGoods(redGoods);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={handleAllClick}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={handle5FirstClick}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={handleGetRed}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}